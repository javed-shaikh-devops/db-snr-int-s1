apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Values.rbac.clusterRole.name }}
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
rules:
  # Google Cas Issuer
  - apiGroups: [ "cas-issuer.jetstack.io" ]
    resources:
      - "googlecasissuers"
    verbs:
      - get
      - list
      - watch
  # Cert-manager core permissions
  - apiGroups: ["cert-manager.io"]
    resources:
      - "certificaterequests"
      - "certificaterequests/status"
      - "certificaterequests/finalizers"
      - "certificates"
    verbs:
      - get
      - list
      - watch
      - update
      - patch
      - create

  # CAS Issuer specific permissions
  - apiGroups: ["cas-issuer.jetstack.io"]
    resources:
      - "googlecasclusterissuers"
      - "googlecasclusterissuers/status"
      - "googlecasclusterissuers/approval"
      - "googlecasissuers"
      - "googlecasissuers/status"
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  # Signer approval permissions
  - apiGroups: ["cert-manager.io"]
    resources:
      - "signers"
    resourceNames:
      - "google-cas-issuer"
    verbs:
      - approve

  # Secrets management
  - apiGroups: [""]
    resources:
      - "secrets"
    verbs:
      - get
      - create
      - update
      - patch
      - list

  # Certificate signing requests
  - apiGroups: ["certificates.k8s.io"]
    resources:
      - "certificatesigningrequests"
    verbs:
      - get
      - list
      - watch

  # Leader election leases
  - apiGroups: ["coordination.k8s.io"]
    resources:
      - "leases"
    verbs:
      - get
      - create
      - update
      - patch

   # Events
  - apiGroups: [ "" ]
    resources: [ "events" ]
    verbs: [ "create", "patch", "update" ]