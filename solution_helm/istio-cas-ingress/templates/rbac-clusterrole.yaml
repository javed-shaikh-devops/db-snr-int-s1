apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Values.rbac.clusterRole.name }}
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
rules:
  # CAS Issuer permissions
  - apiGroups: ["cas-issuer.jetstack.io"]
    resources:
      - "googlecasissuers"
      - "googlecasissuers/status"
      - "googlecasclusterissuers"
      - "googlecasclusterissuers/status"
    verbs: ["get", "list", "watch", "update", "patch"]

  # CertificateRequest approval
  - apiGroups: ["cert-manager.io"]
    resources: ["certificaterequests/approval"]
    verbs: ["update"]

  # CertificateRequest full management
  - apiGroups: ["cert-manager.io"]
    resources:
      - "certificaterequests"
      - "certificaterequests/status"
      - "certificaterequests/finalizers"
      - "certificates"
      - "certificates/status"
      - "signers"
    verbs:
      - get
      - list
      - watch
      - update
      - patch
      - create
      - delete

  # Secrets
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "create", "update", "patch", "list", "delete"]

  # CSR
  - apiGroups: ["certificates.k8s.io"]
    resources:
      - "certificatesigningrequests"
      - "certificatesigningrequests/status"
      - "certificatesigningrequests/approval"
    verbs: ["get", "list", "watch", "create", "update", "patch"]

  # Events
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch", "update"]

  # Leader election
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "create", "update", "patch"]